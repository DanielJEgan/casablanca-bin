#!/bin/bash

source gitlib.sh

verifyNoUncommittedChanges
verifyNoUnpushedCommits
verifyHeadIsNotDetached
verifyPomFileHasASnapshotVersion

# Extract release version etc
ORIG_BRANCH=`git branch| grep '^\* '|sed 's/\* //'`
RELEASE_VERSION=`mvn blah|egrep '^\[INFO\] Building .+ [0-9]+\.[0-9.]*[0-9]+-SNAPSHOT$'|sed 's/\[INFO\] Building .* //'|sed 's/-SNAPSHOT$//'`
LAST_RELEASE_CANDIDATE_NUMBER=`git tag|egrep '^v'$RELEASE_VERSION'_rc[0-9]+$'|sed 's/v'$RELEASE_VERSION'_rc/'/|sort|tail -n 1`
NEXT_RELEASE_CANDIDATE_NUMBER=$(($LAST_RELEASE_CANDIDATE_NUMBER + 1))
RELEASE_CANDIDATE_VERSION="$RELEASE_VERSION""_rc"$NEXT_RELEASE_CANDIDATE_NUMBER
MINOR_RELEASE=`echo $RELEASE_VERSION|sed 's/.*\.//'`
NEXT_SNAPSHOT_VERSION=`echo $RELEASE_VERSION|sed 's/[^.]*$//'`$(($MINOR_RELEASE + 1))-SNAPSHOT
TEMP_BRANCH="v$RELEASE_CANDIDATE_VERSION""_tmpBranch"

confimBeforeProceeding "   Do you wish to create release candidate v$RELEASE_CANDIDATE_VERSION (y/n) ?"

# Checkout a temp branch to perform work on
if ! git checkout -b $TEMP_BRANCH
then
    exit 1
fi

# Update POM file versions
if ! mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$RELEASE_CANDIDATE_VERSION
then
    exit 1
fi

# Add and commit changed POM file versions, push the commit, then tag and push the tag
if ! git add -A
then
    exit 1
fi
if ! git commit -m "v"$RELEASE_CANDIDATE_VERSION
then
    exit 1
fi
if ! git tag v$RELEASE_CANDIDATE_VERSION
then
    exit 1
fi
if ! git push origin v$RELEASE_CANDIDATE_VERSION
then
    exit 1
fi

# Checkout the original branch and delete the temp branch
if ! git checkout $ORIG_BRANCH
then
    exit 1
fi
if ! git branch -D $TEMP_BRANCH
then
    exit 1
fi