#!/bin/bash

source gitlib.sh

verifyNoUncommittedChanges
verifyNoUnpushedCommits
verifyHeadIsNotDetached
verifyPomFileHasASnapshotVersion

ORIG_BRANCH=`git branch| grep '^\* '|sed 's/\* //'`

# Extract release version etc
echo
echo "  - Extracting version from POM file snapshot version"
RELEASE_VERSION=`mvn blah|egrep '^\[INFO\] Building .+ [0-9]+\.[0-9.]*[0-9]+-SNAPSHOT$'|sed 's/\[INFO\] Building .* //'|sed 's/-SNAPSHOT$//'`
verifyIsNextVersion "$RELEASE_VERSION"
LAST_RELEASE_CANDIDATE_NUMBER=`git tag|egrep '^v'$RELEASE_VERSION'_rc[0-9]+$'|sed 's/v'$RELEASE_VERSION'_rc/'/|sort|tail -n 1`
NEXT_RELEASE_CANDIDATE_NUMBER=$(($LAST_RELEASE_CANDIDATE_NUMBER + 1))
RELEASE_CANDIDATE_VERSION="$RELEASE_VERSION""_rc"$NEXT_RELEASE_CANDIDATE_NUMBER

verifyTagDoesNotExist "v$RELEASE_VERSION"
confimBeforeProceeding "   Do you wish to create release candidate v$RELEASE_CANDIDATE_VERSION (y/n) ?"

# Create a POM version modified and tagged version on a temp branch then return to original branch
TEMP_BRANCH="v$RELEASE_CANDIDATE_VERSION""_tmpBranch"
checkoutOnANewBranch $TEMP_BRANCH
updatePomfileVersions $RELEASE_CANDIDATE_VERSION
addAllModificationsAndCommitWithMessage "v"$RELEASE_CANDIDATE_VERSION
tagAndPushTagToOrigin v$RELEASE_CANDIDATE_VERSION
checkout $ORIG_BRANCH
deleteBranch $TEMP_BRANCH

echo
