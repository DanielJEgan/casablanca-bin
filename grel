#!/bin/bash

# Check there are no uncommitted changes
if gitismod .
then
    echo
    echo ERROR: There are uncommitted changes
    echo
    exit 1
fi

# Check there are no "un-pushed" commits
if gitisahead .
then
    echo
    echo ERROR: There are \"un-pushed\" commits to \'origin/master\'
    echo
    exit 1
fi

# Check valid current version in pom file
if ! mvn blah|egrep '^\[INFO\] Building .+ [0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$' >/dev/null
then
    echo
    echo ERROR: Project does not seem to have a -SNAPSHOT version
    echo
    exit 1
fi

# Extract release version etc
ORIG_BRANCH=`git branch| grep '^\* '|sed 's/\* //'`
RELEASE_VERSION=`mvn blah|egrep '^\[INFO\] Building .+ [0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$'|sed 's/\[INFO\] Building .* //'|sed 's/-SNAPSHOT$//'`
MINOR_RELEASE=`echo $RELEASE_VERSION|sed 's/.*\.//'`
NEXT_SNAPSHOT_VERSION=`echo $RELEASE_VERSION|sed 's/[^.]*$//'`$(($MINOR_RELEASE + 1))-SNAPSHOT

# Check current branch is master
if [ "$ORIG_BRANCH" != "master" ]
then
    echo
    echo ERROR: You are not on the master branch \(you are on $ORIG_BRANCH\)
    echo
    exit 1
fi

# Confirm before proceeding
while true; do
    echo
    read -p "   Do you wish to release v$RELEASE_VERSION (y/n) ?" yn
    case $yn in
        [Yy] ) break;;
        [Nn] ) exit;;
        * ) echo "   Please answer y or n.";;
    esac
done
echo

# Update POM file versions and commit (but do not push)
if ! mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$RELEASE_VERSION
then
    exit 1
fi
if ! git add -A
then
    exit 1
fi
if ! git commit -m "v"$RELEASE_VERSION
then
    exit 1
fi

# Build the release
if ! mvn clean source:jar install -Denforcer.skip=true -Dmaven.test.skip=true
then
    exit 1
fi

# The build was successful, so push the commit, then tag and push the tag
if ! git push
then
    exit 1
fi
if ! git tag v$RELEASE_VERSION
then
    exit 1
fi
if ! git push origin v$RELEASE_VERSION
then
    exit 1
fi

# Update POMs to new snapshot, commit and push 
if ! mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$NEXT_SNAPSHOT_VERSION
then
    exit 1
fi
if ! git add -A
then
    exit 1
fi
if ! git commit -m "Updated pom versions to "$NEXT_SNAPSHOT_VERSION
then
    exit 1
fi
if ! git push
then
    exit 1
fi
